package functions

import (
    "context"
    "encoding/json"
    "log"
    "net/http"
    "time"

    "github.com/GoogleCloudPlatform/functions-framework-go/functions"

    // –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –Ω–æ–≤—ã–µ –ø–∞–∫–µ—Ç—ã
    "github.com/Denol007/telegram-personal-assistant-go/internal/note"
    "github.com/Denol007/telegram-personal-assistant-go/internal/store"
    "github.com/Denol007/telegram-personal-assistant-go/internal/telegram"
)

func init() {
    store.Init() // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    functions.HTTP("TelegramWebhookHandler", TelegramWebhookHandler)
}

// TelegramWebhookHandler - –≥–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, —Ç–æ—á–∫–∞ –≤—Ö–æ–¥–∞.
func TelegramWebhookHandler(w http.ResponseWriter, r *http.Request) {
    // 1. –î–µ–∫–æ–¥–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –æ—Ç Telegram
    var update telegram.Update
    if err := json.NewDecoder(r.Body).Decode(&update); err != nil {
        log.Printf("could not decode request: %v", err)
        return
    }

    if update.Message.Text == "" {
        return
    }

    // 2. –°–æ–∑–¥–∞–µ–º –∑–∞–º–µ—Ç–∫—É
    newNote := note.Note{
        Text:      update.Message.Text,
        UserID:    update.Message.Chat.ID,
        CreatedAt: time.Now(),
    }

    // 3. –°–æ—Ö—Ä–∞–Ω—è–µ–º –∑–∞–º–µ—Ç–∫—É
    if err := store.SaveNote(context.Background(), newNote); err != nil {
        log.Printf("Failed to save note: %v", err)
        telegram.Send(update.Message.Chat.ID, "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∑–∞–º–µ—Ç–∫—É. üòî")
        return
    }

    // 4. –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    telegram.Send(update.Message.Chat.ID, "–ó–∞–º–µ—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞! üëç")
}
